/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package practica.automatas;

import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Julian
 * @author Felipe
 */
public class ingresaPropiedades extends javax.swing.JFrame {

    /**
     * Creates new form ingresaPropiedades
     */
    private Vector index;
    private boolean flag = false;
    private String nombre;
    private Vector simbolos;
    private Vector estados;
    private int m, n;

    public ingresaPropiedades() {
        initComponents();
        cambiaEstado(false);
        jCheckBox1.setSelected(true);
        n = 0;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCrearAutomata = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAMuestraEstados = new javax.swing.JTextArea();
        btnTerminarPropiedades = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        btnAñadirEstado = new javax.swing.JButton();
        btnAñadirSimbolo = new javax.swing.JButton();
        txtEstados = new javax.swing.JTextField();
        txtIngresoSimbolo = new javax.swing.JTextField();
        txtMuestraSimbolos = new javax.swing.JTextField();
        rbAceptacion = new javax.swing.JRadioButton();
        rbRechazo = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ingresa Propiedades de Automata");
        setResizable(false);

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nombre Automata: ");

        btnCrearAutomata.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCrearAutomata.setText("Crear el automata");
        btnCrearAutomata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearAutomataActionPerformed(evt);
            }
        });

        txtAMuestraEstados.setEditable(false);
        txtAMuestraEstados.setColumns(3);
        txtAMuestraEstados.setTabSize(0);
        jScrollPane1.setViewportView(txtAMuestraEstados);

        btnTerminarPropiedades.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTerminarPropiedades.setText("Terminar");
        btnTerminarPropiedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarPropiedadesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Estados del Automata: ");

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox1.setText("Estado inicial");
        jCheckBox1.setEnabled(false);
        jCheckBox1.setFocusable(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Simbolo de entrada: ");

        btnAñadirEstado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAñadirEstado.setText("Añadir");
        btnAñadirEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirEstadoActionPerformed(evt);
            }
        });

        btnAñadirSimbolo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAñadirSimbolo.setText("Añadir");
        btnAñadirSimbolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirSimboloActionPerformed(evt);
            }
        });

        txtEstados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtIngresoSimbolo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtIngresoSimbolo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIngresoSimboloKeyTyped(evt);
            }
        });

        txtMuestraSimbolos.setEditable(false);
        txtMuestraSimbolos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMuestraSimbolos.setText("λ");
        txtMuestraSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMuestraSimbolosActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbAceptacion);
        rbAceptacion.setText("Aceptacion");

        buttonGroup1.add(rbRechazo);
        rbRechazo.setSelected(true);
        rbRechazo.setText("Rechazo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMuestraSimbolos, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTerminarPropiedades))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnCrearAutomata))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIngresoSimbolo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(btnAñadirSimbolo))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstados, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAñadirEstado)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbAceptacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbRechazo)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearAutomata))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAñadirSimbolo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtIngresoSimbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(txtMuestraSimbolos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCheckBox1)
                    .addComponent(txtEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAñadirEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbAceptacion)
                    .addComponent(rbRechazo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTerminarPropiedades)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMuestraSimbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMuestraSimbolosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMuestraSimbolosActionPerformed
    public boolean existe1(String a, Vector s) {
        Iterator io = s.iterator();
        while (io.hasNext()) {
            String j = (String) io.next();
            if (j.equals(a)) {
                return (true);
            }
        }
        return false;
    }

    private void btnAñadirSimboloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirSimboloActionPerformed
        if (!txtIngresoSimbolo.getText().equals("")) {
            if (!existe1(txtIngresoSimbolo.getText(), simbolos)) {
                n++;
                simbolos.add(txtIngresoSimbolo.getText());
                txtMuestraSimbolos.setText(txtMuestraSimbolos.getText() + ", " + txtIngresoSimbolo.getText());
                txtIngresoSimbolo.setText("");
                txtIngresoSimbolo.requestFocus();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Ya ingresó este simbolo!");
                txtIngresoSimbolo.setText("");
                txtIngresoSimbolo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar un caracter que represente el simbolo de entrada!");
            txtIngresoSimbolo.requestFocus();
        }
    }//GEN-LAST:event_btnAñadirSimboloActionPerformed

    private void btnAñadirEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirEstadoActionPerformed
        if (!txtEstados.getText().equals("")) {
            m++;
            String est = "E" + m;
            boolean h = false;
            boolean f = false;
            if (jCheckBox1.isSelected()) {
                h = true;
            }
            if (rbAceptacion.isSelected()) {
                f = true;
            }
            estado a = new estado(est, txtEstados.getText(), h, f);
            estados.add(a);

            if (h) {
                flag = true;
                if (f) {
                    txtAMuestraEstados.setText(txtAMuestraEstados.getText() + "\n" + "*" + est + " : " + txtEstados.getText() + " (Aceptacion)");
                } else {
                    txtAMuestraEstados.setText(txtAMuestraEstados.getText() + "\n" + "*" + est + " : " + txtEstados.getText());
                }
                jCheckBox1.setEnabled(false);
            } else {
                if (f) {
                    txtAMuestraEstados.setText(txtAMuestraEstados.getText() + "\n" + est + " : " + txtEstados.getText() + " (Aceptacion)");
                } else {
                    txtAMuestraEstados.setText(txtAMuestraEstados.getText() + "\n" + est + " : " + txtEstados.getText());
                }
            }

            jCheckBox1.setSelected(false);
            txtEstados.selectAll();
            txtEstados.requestFocus();
            h = false;
            f = false;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar un nombre para el estado!");
            txtEstados.requestFocus();
        }
    }//GEN-LAST:event_btnAñadirEstadoActionPerformed

    private void btnTerminarPropiedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarPropiedadesActionPerformed
        if (flag == true) {
            Vector a[][] = new Vector[m + 1][n + 2];
            for (int gg = 0; gg < m + 1; gg++) {
                for (int hh = 0; hh < n + 2; hh++) {
                    a[gg][hh] = new Vector();
                }
            }

            for (int i = 0; i < n; i++) {
                try {
                    a[0][i + 1].add(simbolos.get(i).toString());
                } catch (Exception p) {
                    a[0][i + 1] = new Vector();
                    a[0][i + 1].add(simbolos.get(i).toString());
                }
            }

            for (int i = 0; i < m; i++) {
                estado e = (estado) estados.get(i);
                try {
                    a[i + 1][0].add(e.getIcono());
                } catch (Exception p) {
                    a[i + 1][0] = new Vector();
                    a[i + 1][0].add(e.getIcono());
                }
            }
            a[0][n + 1] = new Vector();
            a[0][n + 1].add("λ");

            simbolos.add("λ");

            automata aut = new automata(nombre, simbolos, estados, a);
            ingresarAutomata ing = new ingresarAutomata(aut, index);
            ing.setVisible(true);
            this.setVisible(false);
            flag = false;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar mínimo 1 estado inicial!");

        }
    }//GEN-LAST:event_btnTerminarPropiedadesActionPerformed

    private void btnCrearAutomataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearAutomataActionPerformed
        nombre = txtNombre.getText();
        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(rootPane, ("Debe ingresar un nombre para el automata"));
            txtNombre.requestFocus();
            return;
        }
        simbolos = new Vector();
        estados = new Vector();
        cambiaEstado(true);
        btnCrearAutomata.setEnabled(false);
        txtNombre.setEditable(false);
        txtIngresoSimbolo.requestFocus();
        jCheckBox1.setEnabled(false);
        txtNombre.setEnabled(false);

    }//GEN-LAST:event_btnCrearAutomataActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void txtIngresoSimboloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIngresoSimboloKeyTyped
        if (txtIngresoSimbolo.getText().length() == 1) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIngresoSimboloKeyTyped
    private void cambiaEstado(boolean a) {
        txtIngresoSimbolo.setEditable(a);
        btnAñadirSimbolo.setEnabled(a);
        txtEstados.setEditable(a);
        btnAñadirEstado.setEnabled(a);
        btnTerminarPropiedades.setEnabled(a);
        jCheckBox1.setEnabled(a);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ingresaPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ingresaPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ingresaPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ingresaPropiedades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ingresaPropiedades().setVisible(true);

            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadirEstado;
    private javax.swing.JButton btnAñadirSimbolo;
    private javax.swing.JButton btnCrearAutomata;
    private javax.swing.JButton btnTerminarPropiedades;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbAceptacion;
    private javax.swing.JRadioButton rbRechazo;
    private javax.swing.JTextArea txtAMuestraEstados;
    private javax.swing.JTextField txtEstados;
    private javax.swing.JTextField txtIngresoSimbolo;
    private javax.swing.JTextField txtMuestraSimbolos;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
